# This is the main server block that listens on port 80 (the default HTTP port)
# inside the container. The docker-compose.yml file maps port 8080 on the host
# to this port.
server {
    listen 80;
    server_name localhost;

    # This location block serves the main frontend application (index.html).
    # It's configured to work as a single-page application (SPA).
    location / {
        root   /usr/share/nginx/html;
        index  index.html;
        # If a file or directory is not found, it falls back to serving index.html.
        # This is crucial for SPAs where routing is handled by client-side JavaScript.
        try_files $uri $uri/ /index.html;
        
        # Add a Content Security Policy header to allow Tailwind's JIT compiler.
        # This allows scripts from self, the Tailwind CDN, and Google Fonts.
        # 'unsafe-eval' is required for the Tailwind CDN script to work.
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' https://cdn.tailwindcss.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self' http://localhost:3000; img-src 'self' data: https://lh3.googleusercontent.com;";
    }

    # This location block acts as a reverse proxy for all API calls.
    # Any request starting with /api/ will be forwarded to the 'api' service.
    location /api/ {
        # The upstream service is named 'api' in docker-compose.yml and it runs on port 3000.
        proxy_pass http://api:3000;
        
        # These headers are important for passing client information to the upstream service.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # This location block is for the AI summary feature.
    # It also needs to be proxied to the 'api' service on port 3000.
    location /summarize {
        proxy_pass http://api:3000;
        proxy_set_header Host $host;
    }
}